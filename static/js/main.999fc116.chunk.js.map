{"version":3,"sources":["UserInput.js","App.js","reportWebVitals.js","index.js"],"names":["Input","styled","input","UserInput","userInput","updateInput","value","onChange","e","Button","button","App","state","todo","addHandler","event","preventDefault","newTodo","push","setState","deleteHandler","i","splice","target","console","log","this","className","map","item","index","onClick","onSubmit","type","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAEMA,EAAQC,IAAOC,MAAV,6EAeIC,EAVG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAC5B,OACI,gCACI,cAACL,EAAD,CAAOM,MAAOF,EAAWG,SAAU,SAACC,GAAD,OAAOH,EAAYG,MACtD,4BAAIJ,QCPVK,EAASR,IAAOS,OAAV,8EAoDGC,E,4MA9CbC,MAAQ,CACNC,KAAM,GACNT,UAAW,I,EAGbU,WAAa,SAACC,GACZA,EAAMC,iBACN,IAAIC,EAAO,YAAO,EAAKL,MAAMC,MAC7BI,EAAQC,KAAK,EAAKN,MAAMR,WACxB,EAAKe,SAAS,CAAEN,KAAMI,IACtB,EAAKE,SAAS,CAAEf,UAAW,M,EAG7BgB,cAAgB,SAACC,GACf,IAAIJ,EAAO,YAAO,EAAKL,MAAMC,MAC7BI,EAAQK,OAAOD,EAAG,GAClB,EAAKF,SAAS,CAAEN,KAAMI,K,EAGxBZ,YAAc,SAACG,GACb,EAAKW,SAAS,CAAEf,UAAWI,EAAEe,OAAOjB,S,4CAGtC,WAAU,IAAD,OAEP,OADAkB,QAAQC,IAAIC,KAAKd,OAEjB,sBAAKe,UAAU,MAAf,UACE,uCACCD,KAAKd,MAAMC,KAAKe,KAAI,SAACC,EAAMC,GAC1B,OAEE,gCACE,6BAAKD,IACL,cAACpB,EAAD,CAAQsB,QAAS,kBAAM,EAAKX,cAAcU,IAA1C,sBAFQA,MAMd,uBAAME,SAAUN,KAAKZ,WAArB,UACE,cAAC,EAAD,CAAWT,YAAaqB,KAAKrB,YAAaD,UAAWsB,KAAKd,MAAMR,YAChE,wBAAQ6B,KAAK,SAAb,gC,GAxCUC,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.999fc116.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Input = styled.input `\n    border: teal 4px dotted;\n    width: 600px;\n`\n\nconst UserInput = ({ userInput, updateInput }) => {\n    return (\n        <div>\n            <Input value={userInput} onChange={(e) => updateInput(e) }/>\n            <p>{userInput}</p>\n        </div>\n        \n    )\n}\n\nexport default UserInput","import React from 'react';\nimport styled from 'styled-components';\nimport UserInput from './UserInput';\n\nconst Button = styled.button `\n  border: solid 4px red;\n  border-radius: 10px;\n`\n\nclass App extends React.Component {\n  state = {\n    todo: [],\n    userInput: \"\"\n  }\n\n  addHandler = (event) => {\n    event.preventDefault()\n    let newTodo = [...this.state.todo]\n    newTodo.push(this.state.userInput)\n    this.setState({ todo: newTodo })\n    this.setState({ userInput: \"\" })\n  }\n  \n  deleteHandler = (i) => {\n    let newTodo = [...this.state.todo]\n    newTodo.splice(i, 1)\n    this.setState({ todo: newTodo})\n  }\n\n  updateInput = (e) => {\n    this.setState({ userInput: e.target.value })\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n    <div className=\"App\">\n      <h1>tasks</h1>\n      {this.state.todo.map((item, index) => {\n        return (\n         \n          <div key={index}>\n            <h2>{item}</h2>\n            <Button onClick={() => this.deleteHandler(index)}>delete</Button>\n          </div>\n        )\n      })}\n      <form onSubmit={this.addHandler}>\n        <UserInput updateInput={this.updateInput} userInput={this.state.userInput} />\n        <button type=\"submit\">add task</button>\n      </form>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ToDo from './ToDo';\n\n\n// import ToDo from \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    {/* <ToDo /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}